div 태그 (가로 100%)
시멘틱 태그
- header: 맨위
- nav: navigation 메뉴
- main: 메인컨텐츠
- footer: 부가적인 정보, 회사소개

- section: 관련된 내용 단위로 묶는 태그 (section 태그 안에 section 태그가 들어갈 수 있다)
- article: section 태그보다 더 적은 단위로 기사, 게시글 등을 묶는 태그
- aside: 본문 컨텐츠 외에 별도 영역을 지정
- figure: 표, 그림, 다이어그램 등과 설명을 묶는 태그

(css)
- div 태그에 id를 달아서 구분
div#header-center (div생략가능)
header#header (생략X)
* html 파일에 css 파일 link 걸어주는거 잊지말기
  (c++에서 #include "css.h" 와 유사한 개념)
* Cascading(덮어씌워지다) Style Sheet
 - 조상 태그에서 적용된 css를 자식이 덮어씌움
   (c++: 가상함수와 유사..? (함수 오버라이딩))
   (상속받은 클래스에서 부모 클래스의 가상함수 재정의)
- 선택자, 속성 외우자 !!

********************************
<반드시 기억해야 하는 CSS 선택자>
* : HTML 문서 내 전체에 적용,
    페이지에 있는 전체 요소를 대상으로 (margin, padding 값 0으로 세팅할때)
    (많이 사용하진 말자) (자식 선택자에도 사용 가능)
#X: ID 선택자 (ID는 문서 내에서 하나만 존재)
.X: class 선택자
    (id와 class의 차이점: class는 여러개의 요소를 대상으로 정할수있음)
#X, .Y: 다중 선택자, 나열된 여러 요소에 모두 적용
X Y: descendant 선택자
X : 태그 이름 명시, type 선택자 (한 페이지에 있는 모든 요소를 대상으로)
    (순서가 정해지지 않은 목록 전부를 대상으로 : ul{})
X:link : 클릭하기 전 상태의 앵커 태그 전체를 대상으로 (가상 클래스)
X:visited : 클릭했었거나 방문했던 페이지에 있는 앵커 태그 (가상 클래스)
X + Y : 인접 선택자, 앞의 요소 바로 뒤에 있는 요소'만' 선택
X > Y : 직계 자신만을 선택
X ~ Y : (X+Y와 유사) 앞의 요소 바로 뒤에 있는 (모든) 요소 선택
        ex) ul ~ p { color: red; } : ul 아래 있느 모든 p 요소 선택

X[ attribute ]: 속성 선택자(attributes selector)
          attribute 속성이 있는 태그만 선택
tag[ attribute = "value" ]: 특정속성 가지면서 값이 '일치'하는 태그 선택
tag[ attribute != "value" ]: "value"값을 포함한 속성값을 가진 요소 선택
                         (반드시 앞뒤에 공백문자 외에 다른 문자 오면 안됨)
tag[ attribute |= "value" ]: "value"값과 동일하거나 "value"로 시작하며
                          뒤에 -로 이어진 다른 문자가 따라오는 속성값이 할당된 요소 선택
                          ("value"와 - 사이에 공백문자 들어가면 선택X)
tag[ attribute ^= "value" ]: "value"로 '시작'하는 값이 할당된 특정 속성을 가진 모든 요소 선택
tag[ attribute $= "value" ]: "value"로 '끝'나는 값이 할당된 특정 속성을 가진 모든 요소 선택
tag[ attribute *= "value" ]: 앞뒤로 어떤 문자로 조합이 되어도
                             "value"가 들어간 속성값이 할당된 특정속성의 요소 모두 선택

<CSS 자주 사용하는 속성들>
background: 선택자 영역에 배경색 지정
            - 일반색 적용: 16진수 표기 (6자리/3자리) ex) #ef2aff
            - 반투명색 적용: rgba 표기
                            (rgb: 0~255 / alpha(투명도): 0~1 소수값)
width/height: 가로/세로 사이즈 지정
              - 0~100% or px(pixel)
글자 - 스타일(ex: span 태그)
       - 굵게: span {font-weight: bold;}
       - 글자 크기: span {font-size: 25px;}
       - 글자 색깔: span {color: #000;}
     - 정렬 (ex: a 태그)
       - 가운데로 정렬: a {text-align: center;}
text-decoration: 하이퍼링크된 글자의 효과(글씨색, 밑줄) 없애기
                 a 태그에 적용한다  ex) a {text-decoration: none;}
list-style: <ul> 밑에 <li> 태그 앞에 나타나는 점 없애기
            li 태그에 적용한다  ex) li {list-style: none;}
z-index: 겹치는 요소가 있을때, 태그를 위로 올려줄 것인지 지정한다
         1에서부터 큰 수 지정, 숫자가 클수록 위에 올려짐
(~ 나머지는 사이트 읽으면서 공부)


* 여기서 앵커(anchor) 태그란? a태그 <a></a>
 : 좌표(주소 혹은 URL)를 가리키는 역할
* 그러면 <a>태그랑 <link>태그의 차이점은?
 : a 태그에 href 속성을 통해 링크로 이동
   link 태그는 이동X, link 태그에 포함된 css나 png 파일 등 현재 문서와의 관계 정의

*********************************

div {
    display: block; /* 기본적으로 전체 너비 모두 차지함*/
}

<div style="display: inline-block"> -> <span>
* 여기서 span은 display: inline;

- block: 너비 100%
- inline: 자기 컨텐츠만큼의 너비 (빈공간X)
- inline-block: width, height 지정 가능

#header-search > h1 (자식)
#header-center h1 (자손)

pixel (상대적인 크기)
console창에 screen.(width/height) 치면 모니터의 해상도 알수있음